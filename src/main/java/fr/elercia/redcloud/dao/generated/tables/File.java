/*
 * This file is generated by jOOQ.
 */
package fr.elercia.redcloud.dao.generated.tables;


import fr.elercia.redcloud.dao.generated.Indexes;
import fr.elercia.redcloud.dao.generated.Keys;
import fr.elercia.redcloud.dao.generated.Redcloud;
import fr.elercia.redcloud.dao.generated.tables.records.FileRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class File extends TableImpl<FileRecord> {

    private static final long serialVersionUID = 78627264;

    /**
     * The reference instance of <code>redcloud.file</code>
     */
    public static final File FILE = new File();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<FileRecord> getRecordType() {
        return FileRecord.class;
    }

    /**
     * The column <code>redcloud.file.id</code>.
     */
    public final TableField<FileRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>redcloud.file.name</code>.
     */
    public final TableField<FileRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false), this, "");

    /**
     * The column <code>redcloud.file.resource_id</code>.
     */
    public final TableField<FileRecord, String> RESOURCE_ID = createField("resource_id", org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false), this, "");

    /**
     * The column <code>redcloud.file.creation_date</code>.
     */
    public final TableField<FileRecord, Timestamp> CREATION_DATE = createField("creation_date", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>redcloud.file.directory_id</code>.
     */
    public final TableField<FileRecord, Integer> DIRECTORY_ID = createField("directory_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>redcloud.file</code> table reference
     */
    public File() {
        this(DSL.name("file"), null);
    }

    /**
     * Create an aliased <code>redcloud.file</code> table reference
     */
    public File(String alias) {
        this(DSL.name(alias), FILE);
    }

    /**
     * Create an aliased <code>redcloud.file</code> table reference
     */
    public File(Name alias) {
        this(alias, FILE);
    }

    private File(Name alias, Table<FileRecord> aliased) {
        this(alias, aliased, null);
    }

    private File(Name alias, Table<FileRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Redcloud.REDCLOUD;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.FILE_FILE_DIRECTORY_ID_FK, Indexes.FILE_FILE_ID_UINDEX, Indexes.FILE_FILE_RESOURCE_ID_UINDEX, Indexes.FILE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<FileRecord, Integer> getIdentity() {
        return Keys.IDENTITY_FILE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<FileRecord> getPrimaryKey() {
        return Keys.KEY_FILE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<FileRecord>> getKeys() {
        return Arrays.<UniqueKey<FileRecord>>asList(Keys.KEY_FILE_PRIMARY, Keys.KEY_FILE_FILE_ID_UINDEX, Keys.KEY_FILE_FILE_RESOURCE_ID_UINDEX);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<FileRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<FileRecord, ?>>asList(Keys.FILE_DIRECTORY_ID_FK);
    }

    public Directory directory() {
        return new Directory(this, Keys.FILE_DIRECTORY_ID_FK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public File as(String alias) {
        return new File(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public File as(Name alias) {
        return new File(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public File rename(String name) {
        return new File(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public File rename(Name name) {
        return new File(name, null);
    }
}
